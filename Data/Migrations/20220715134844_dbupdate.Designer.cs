// <auto-generated />
using System;
using CPMSwebapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPMSwebapp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220715134844_dbupdate")]
    partial class dbupdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CPMSwebapp.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Paper", b =>
                {
                    b.Property<int>("PaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaperID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaperId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("AnalysisOfAlgorithms")
                        .HasColumnType("bit");

                    b.Property<bool?>("Applications")
                        .HasColumnType("bit");

                    b.Property<bool?>("Architecture")
                        .HasColumnType("bit");

                    b.Property<bool?>("ArtificialIntelligence")
                        .HasColumnType("bit");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<string>("Certification")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool?>("ComputerEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("Curriculum")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataStructures")
                        .HasColumnType("bit");

                    b.Property<bool?>("Databases")
                        .HasColumnType("bit");

                    b.Property<bool?>("DistanceLearning")
                        .HasColumnType("bit");

                    b.Property<bool?>("DistributedSystems")
                        .HasColumnType("bit");

                    b.Property<bool?>("EthicalSocietalIssues")
                        .HasColumnType("bit");

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Filename")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FirstYearComputing")
                        .HasColumnType("bit");

                    b.Property<bool?>("GenderIssues")
                        .HasColumnType("bit");

                    b.Property<bool?>("GrantWriting")
                        .HasColumnType("bit");

                    b.Property<bool?>("GraphicsImageProcessing")
                        .HasColumnType("bit");

                    b.Property<bool?>("HumanComputerInteraction")
                        .HasColumnType("bit");

                    b.Property<bool?>("LaboratoryEnvironments")
                        .HasColumnType("bit");

                    b.Property<bool?>("Literacy")
                        .HasColumnType("bit");

                    b.Property<bool?>("MathematicsInComputing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Multimedia")
                        .HasColumnType("bit");

                    b.Property<bool?>("NetworkingDataCommunications")
                        .HasColumnType("bit");

                    b.Property<bool?>("NonMajorCourses")
                        .HasColumnType("bit");

                    b.Property<string>("NotesToReviewers")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ObjectOrientedIssues")
                        .HasColumnType("bit");

                    b.Property<bool?>("OperatingSystems")
                        .HasColumnType("bit");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OtherDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ParallelsProcessing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Pedagogy")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProgrammingLanguages")
                        .HasColumnType("bit");

                    b.Property<bool?>("Research")
                        .HasColumnType("bit");

                    b.Property<bool?>("Security")
                        .HasColumnType("bit");

                    b.Property<bool?>("SoftwareEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("SystemsAnalysisAndDesign")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("UsingTechnologyInTheClassroom")
                        .HasColumnType("bit");

                    b.Property<bool>("WebAndInternetProgramming")
                        .HasColumnType("bit");

                    b.HasKey("PaperId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Paper");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<decimal?>("AppropriatenessOfTopic")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("CitationOfPreviousWork")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("ClarityOfMainMessage")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("ComfortLevelAcceptability")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("ComfortLevelTopic")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<bool?>("Complete")
                        .HasColumnType("bit");

                    b.Property<string>("ContentComments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Mechanics")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("OrganizationOfPaper")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("Originality")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("OverallRating")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("OverallRatingComments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaperId")
                        .HasColumnType("int")
                        .HasColumnName("PaperID");

                    b.Property<string>("PotentialForOralPresentationComments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PotentialInterestInTopic")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int")
                        .HasColumnName("ReviewerID");

                    b.Property<decimal?>("ScopeOfCoverage")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("SuitabilityForPresentation")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("SupportiveEvidence")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("TechnicalQuality")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("TimelinessOfTopic")
                        .IsRequired()
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("WrittenDocumentComments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("PaperId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Reviewer", b =>
                {
                    b.Property<int>("ReviewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewerId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("AnalysisOfAlgorithms")
                        .HasColumnType("bit");

                    b.Property<bool?>("Applications")
                        .HasColumnType("bit");

                    b.Property<bool?>("Architecture")
                        .HasColumnType("bit");

                    b.Property<bool?>("ArtificialIntelligence")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ComputerEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("Curriculum")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataStructures")
                        .HasColumnType("bit");

                    b.Property<bool?>("Databases")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DistancedLearning")
                        .HasColumnType("bit");

                    b.Property<bool?>("DistributedSystems")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EthicalSocietalIssues")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("FirstYearComputing")
                        .HasColumnType("bit");

                    b.Property<bool?>("GenderIssues")
                        .HasColumnType("bit");

                    b.Property<bool?>("GrantWriting")
                        .HasColumnType("bit");

                    b.Property<bool?>("GraphicsImageProcessing")
                        .HasColumnType("bit");

                    b.Property<bool?>("HumanComputerInteraction")
                        .HasColumnType("bit");

                    b.Property<bool?>("LaboratoryEnvironments")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Literacy")
                        .HasColumnType("bit");

                    b.Property<bool?>("MathematicsInComputing")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool?>("Multimedia")
                        .HasColumnType("bit");

                    b.Property<bool?>("NetworkingDataCommunications")
                        .HasColumnType("bit");

                    b.Property<bool?>("NonMajorCourses")
                        .HasColumnType("bit");

                    b.Property<bool?>("ObjectOrientedIssues")
                        .HasColumnType("bit");

                    b.Property<bool?>("OperatingSystems")
                        .HasColumnType("bit");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OtherDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ParallelProcessing")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool?>("Pedagogy")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ProgrammingLanguages")
                        .HasColumnType("bit");

                    b.Property<bool?>("Research")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReviewsAcknowledged")
                        .HasColumnType("bit");

                    b.Property<bool?>("Security")
                        .HasColumnType("bit");

                    b.Property<bool?>("SoftwareEngineering")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool?>("SystemsAnalysisAndDesign")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsingTechnologyInTheClassroom")
                        .HasColumnType("bit");

                    b.Property<bool>("WebAndInternetProgramming")
                        .HasColumnType("bit");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ReviewerId");

                    b.ToTable("Reviewer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CPMSwebapp.Models.Paper", b =>
                {
                    b.HasOne("CPMSwebapp.Models.Author", "Author")
                        .WithMany("Papers")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Review", b =>
                {
                    b.HasOne("CPMSwebapp.Models.Paper", "Paper")
                        .WithMany("Reviews")
                        .HasForeignKey("PaperId");

                    b.HasOne("CPMSwebapp.Models.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId");

                    b.Navigation("Paper");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CPMSwebapp.Models.Author", b =>
                {
                    b.Navigation("Papers");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Paper", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CPMSwebapp.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
